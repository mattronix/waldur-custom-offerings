version: '3.7'

services:
  caddy:
    image: ${DOCKER_REGISTRY_PREFIX}library/caddy:2
    volumes:
      - caddy-data:/data/caddy
    command: caddy reverse-proxy --from ${EXTERNAL_URL:-localhost} --to firezone:13000
    ports:
      - 80:80
      - 443:443
    pull_policy: always
    restart: always

  firezone:
    image: ${DOCKER_REGISTRY_PREFIX}firezone/firezone:0.7.13
    ports:
      - 51820:51820/udp
      - 127.0.0.1:13000:13000/tcp
    volumes:
      - firezone-data:/var/firezone
    env_file:
      # This should contain a list of env vars for configuring Firezone.
      # See https://docs.firezone.dev/reference/env-vars for more info.
      - ${FZ_INSTALL_DIR:-.}/.env
    cap_add:
      # Needed for WireGuard and firewall support.
      - NET_ADMIN
      - SYS_MODULE
    sysctls:
      # Needed for masquerading and NAT.
      - net.ipv6.conf.all.disable_ipv6=0
      - net.ipv4.ip_forward=1
      - net.ipv6.conf.all.forwarding=1
    depends_on:
      - postgres
    pull_policy: always
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:13000"]
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 40s

  postgres:
    image: ${DOCKER_REGISTRY_PREFIX}library/postgres:15
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${DATABASE_NAME:-firezone}
      POSTGRES_USER: ${DATABASE_USER:-postgres}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD:?err}
    pull_policy: always
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "${DATABASE_NAME:-firezone}"]
      interval: 30s
      timeout: 60s
      retries: 5
      start_period: 80s  

volumes:
  postgres-data:
  caddy-data:
  firezone-data:
